var fs = require('fs');
var Markdown = require('markdown-to-html').Markdown;



var inserts = {
  'head': 
  '\n' + 
    '<title>wearable-camera-desktop-browser by computationalEpidemiology</title>\n' + 
    '<meta charset="UTF-8">\n' + 
    '<meta name="viewport" content="width=device-width, initial-scale=1">\n' + 
    '<link rel="stylesheet" type="text/css" href="stylesheets/normalize.css" media="screen">\n' + 
    '<link href=\'https://fonts.googleapis.com/css?family=Open+Sans:400,700\' rel=\'stylesheet\' type=\'text/css\'>\n' + 
    '<link rel="stylesheet" type="text/css" href="stylesheets/stylesheet.css" media="screen">\n' + 
    '<link rel="stylesheet" type="text/css" href="stylesheets/github-light.css" media="screen">'
    ,
  'body': 
    '<section class="page-header">\n' +
    ' <h1 class="project-name">wearable-camera-desktop-browser</h1>\n' +
    ' <h2 class="project-tagline">Analysing wearable camera on a standalone PC</h2>\n' +
    ' <a href="https://github.com/computationalEpidemiology/wearable-camera-desktop-browser" class="btn">View on GitHub</a>\n' +
    ' <a href="https://github.com/computationalEpidemiology/wearable-camera-desktop-browser/zipball/master" class="btn">Download .zip</a>\n' +
    ' <a href="https://github.com/computationalEpidemiology/wearable-camera-desktop-browser/tarball/master" class="btn">Download .tar.gz</a>\n' +
    '</section>\n\n' + 
    '<section class="main-content">'
    ,
  'footer': 
      '<\/section">\n' +
      '<footer class="site-footer">\n' +
        '<span class="site-footer-owner"><a href="https://github.com/computationalEpidemiology/wearable-camera-desktop-browser">wearable-camera-desktop-browser</a> is maintained by <a href="https://github.com/computationalEpidemiology">computationalEpidemiology</a>.</span>\n' +
        '<span class="site-footer-credits">This page was generated by <a href="https://pages.github.com">GitHub Pages</a> using the <a href="https://github.com/jasonlong/cayman-theme">Cayman theme</a> by <a href="https://twitter.com/jasonlong">Jason Long</a>.</span>\n' +
      '</footer>\n' +
    '</section>\n'
}
var opts = {title: 'wearable-camera-desktop-browser'};

var files = fs.readdirSync('readmes/');
console.log(files)



renderFile(0)
function renderFile(i) {
  if (!files[i]) return
  if (files[i].substr(files[i].length-3)!='.md') renderFile(i+1)
  var file = files[i].substr(0, files[i].length-3); //'1-Equipment-software-setup'
  console.log(i, file)
  var fileName = 'readmes/' + file + '.md';
  var outputFile = file + '.html';
  var outStream = fs.createWriteStream(outputFile);
  outStream.on('close', function() {renderFile(i+1);})

  // Write a header.
  console.log('rendering ' + fileName);

  var md = new Markdown();
  md.bufmax = 2048;

  // Write a trailer at eof.
  md.render(fileName, opts, function(err) {
    if (err) {
      console.error('>>>' + err);
      process.exit();
    }
    md.pipe(outStream);
  });

  md.once('end', function() {
    console.log('done rendering ' + fileName);
    console.log('modifying ' + outputFile)
    fs.readFile(outputFile, 'utf8', function (err,data) {
      if (err) {
        return console.log(err);
      }
      data = data.replace(/<head>[\s\S]*<\/head>/g, '<head>' + inserts.head + '<\/head>');
      data = data.replace(/<body>/g, "<body>\n" + inserts.body);
      data = data.replace(/<\/body>/g, inserts.footer + "\n <\/body>");

      fs.writeFile(outputFile, data, 'utf8', function (err) {
         outStream.destroy();
         if (err) return console.log(err);
      });
      
    });
  });
}